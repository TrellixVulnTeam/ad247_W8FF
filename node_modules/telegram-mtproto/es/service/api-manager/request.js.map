{"version":3,"sources":["../../../src/service/api-manager/request.js"],"names":["Bluebird","MTError","delayedCall","Request","constructor","config","method","params","performRequest","bind","error303","error420","initNetworker","networker","getNetworker","netOpts","dc","wrapApiCall","err","matched","type","match","length","reject","newDcID","waitTime","console","error"],"mappings":";;AAEA,OAAOA,QAAP,MAAqB,UAArB;;AAEA;AACA;;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,gBAA5B;;;AAKA,MAAMC,OAAN,CAAc;AAIZC,cAAYC,MAAZ,EACYC,MADZ,EAEYC,SAA+B,EAF3C,EAE+C;AAC7C,SAAKF,MAAL,GAAcA,MAAd;AACA,SAAKC,MAAL,GAAcA,MAAd;AACA,SAAKC,MAAL,GAAcA,MAAd;;AAEA;AACA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAAtB;AACA;AACA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcD,IAAd,CAAmB,IAAnB,CAAhB;AACA;AACA,SAAKE,QAAL,GAAgB,KAAKA,QAAL,CAAcF,IAAd,CAAmB,IAAnB,CAAhB;AACD;AACKG,eAAN,GAA8C;AAAA;;AAAA;AAC5C,UAAI,CAAC,MAAKP,MAAL,CAAYQ,SAAjB,EAA4B;AAC1B,YAAM,EAAEC,YAAF,EAAgBC,OAAhB,EAAyBC,EAAzB,KAAgC,MAAKX,MAA3C;AACA,YAAMQ,YAAY,MAAMC,aAAaE,EAAb,EAAiBD,OAAjB,CAAxB;AACA,cAAKV,MAAL,CAAYQ,SAAZ,GAAwBA,SAAxB;AACD;AACD,aAAO,MAAKR,MAAL,CAAYQ,SAAnB;AAN4C;AAO7C;;AAEKL,gBAAN,GAAqC;AAAA;;AAAA;AACnC,UAAMK,YAAY,MAAM,OAAKD,aAAL,EAAxB;AACA,aAAOC,UAAUI,WAAV,CACL,OAAKX,MADA,EAEL,OAAKC,MAFA,EAGL,OAAKF,MAAL,CAAYU,OAHP,CAAP;AAFmC;AAMpC;AACD;AACA;AACE;AACA;AACFL,WAASQ,GAAT,EAAuB;AACrB,QAAMC,UAAUD,IAAIE,IAAJ,CAASC,KAAT,CAAe,uDAAf,CAAhB;AACA,QAAI,CAACF,OAAD,IAAYA,QAAQG,MAAR,GAAiB,CAAjC,EAAoC,OAAOtB,SAASuB,MAAT,CAAgBL,GAAhB,CAAP;AACpC,QAAM,IAAMM,OAAN,IAAiBL,OAAvB;AACA,QAAI,CAACK,OAAD,KAAa,KAAKnB,MAAL,CAAYW,EAA7B,EAAiC,OAAOhB,SAASuB,MAAT,CAAgBL,GAAhB,CAAP;AACjC,SAAKb,MAAL,CAAYW,EAAZ,GAAiB,CAACQ,OAAlB;AACA,WAAO,KAAKnB,MAAL,CAAYQ,SAAnB;AACA;;;;AAIA;AACA;AACA,WAAO,KAAKL,cAAL,EAAP;AACD;AACDG,WAASO,GAAT,EAAsC;AACpC,QAAMC,UAAUD,IAAIE,IAAJ,CAASC,KAAT,CAAe,mBAAf,CAAhB;AACA,QAAI,CAACF,OAAD,IAAYA,QAAQG,MAAR,GAAiB,CAAjC,EAAoC,OAAOtB,SAASuB,MAAT,CAAgBL,GAAhB,CAAP;AACpC,QAAM,GAAIO,QAAJ,IAAiBN,OAAvB;AACAO,YAAQC,KAAR,CAAe,yDAAwDF,QAAS,UAAhF;AACA,WAAO,CAACA,QAAD,GAAY,EAAZ,GACHzB,SAASuB,MAAT,CAAgBL,GAAhB,CADG,GAEHhB,YAAY,KAAKM,cAAjB,EAAiC,CAACiB,QAAD,GAAY,GAA7C,CAFJ;AAGD;AA7DW;;AAgEd,eAAetB,OAAf","file":"request.js","sourcesContent":["//@flow\n\nimport Bluebird from 'bluebird'\n\n// import Logger from 'mtproto-logger'\n// const log = Logger`request`\n\nimport { MTError } from '../../error'\nimport { delayedCall } from 'mtproto-shared'\nimport type { NetworkerType, RequestOptions } from './index.h'\n\n\n\nclass Request {\n  method: string\n  params: { [arg: string]: * }\n  config: RequestOptions\n  constructor(config: RequestOptions,\n              method: string,\n              params: { [key: string]: * } = {}) {\n    this.config = config\n    this.method = method\n    this.params = params\n\n    //$FlowIssue\n    this.performRequest = this.performRequest.bind(this)\n    //$FlowIssue\n    this.error303 = this.error303.bind(this)\n    //$FlowIssue\n    this.error420 = this.error420.bind(this)\n  }\n  async initNetworker(): Promise<NetworkerType> {\n    if (!this.config.networker) {\n      const { getNetworker, netOpts, dc } = this.config\n      const networker = await getNetworker(dc, netOpts)\n      this.config.networker = networker\n    }\n    return this.config.networker\n  }\n\n  async performRequest(): Promise<any> {\n    const networker = await this.initNetworker()\n    return networker.wrapApiCall(\n      this.method,\n      this.params,\n      this.config.netOpts)\n  }\n  // requestWith = (networker: NetworkerType): Bluebird$Promise<*> => networker\n  //   .wrapApiCall(this.method, this.params, this.config.netOpts)\n    // .catch({ code: 303 }, this.error303)\n    // .catch({ code: 420 }, this.error420)\n  error303(err: MTError) {\n    const matched = err.type.match(/^(PHONE_MIGRATE_|NETWORK_MIGRATE_|USER_MIGRATE_)(\\d+)/)\n    if (!matched || matched.length < 2) return Bluebird.reject(err)\n    const [ , , newDcID] = matched\n    if (+newDcID === this.config.dc) return Bluebird.reject(err)\n    this.config.dc = +newDcID\n    delete this.config.networker\n    /*if (this.config.dc)\n      this.config.dc = newDcID\n    else\n      await this.config.storage.set('dc', newDcID)*/\n    //TODO There is disabled ability to change default DC\n    //NOTE Shouldn't we must reassign current networker/cachedNetworker?\n    return this.performRequest()\n  }\n  error420(err: MTError): Bluebird<any> {\n    const matched = err.type.match(/^FLOOD_WAIT_(\\d+)/)\n    if (!matched || matched.length < 2) return Bluebird.reject(err)\n    const [ , waitTime ] = matched\n    console.error(`Flood error! It means that mtproto server bans you on ${waitTime} seconds`)\n    return +waitTime > 60\n      ? Bluebird.reject(err)\n      : delayedCall(this.performRequest, +waitTime * 1e3)\n  }\n}\n\nexport default Request\n"]}