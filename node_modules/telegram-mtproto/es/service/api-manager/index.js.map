{"version":3,"sources":["../../../src/service/api-manager/index.js"],"names":["Promise","Logger","debug","Auth","blueDefer","KeyManager","MTError","DcUrlError","bytesFromHex","bytesToHex","delayedCall","dTime","Request","Config","NetworkerThread","ApiRequest","Property","baseDcID","Ln","length","obj","res","ApiManager","constructor","config","uid","cache","uploader","downloader","auth","servers","keysParsed","authPromise","authBegin","currentDc","online","server","api","app","storage","publicKeys","apiConfig","serverConfig","emitter","rootEmitter","on","emit","keyManager","mtpInvokeApi","bind","invokeNetRequest","mtpGetNetworker","onlineProp","join","root","get","observe","drain","newDc","networkSetter","dc","authKey","serverSalt","networker","appConfig","dcID","Error","akk","ssk","dcUrl","dcMap","authKeyHex","serverSaltHex","error","netError","set","doAuth","storedBaseDc","baseDc","opts","createNetworker","nearestDc","wrapApiCall","nearest_dc","this_dc","resolve","err","reject","initConnection","isAnyNetworker","promise","method","params","options","netReq","requestID","defer","data","console","warn","noErrorBox","rejectPromise","reqDc","e","cfg","getNetworker","netOpts","req","performRequest","then","code","type","noAuth","apiReq","catch","ctx","Object","keys","log","stack"],"mappings":"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","file":"index.js","sourcesContent":["//@flow\n\nimport Promise from 'bluebird'\n// import UpdatesManager from '../updates'\n\nimport Logger from 'mtproto-logger'\nconst debug = Logger`api-manager`\n\nimport Auth from '../authorizer'\nimport type { Args } from '../authorizer'\n\nimport blueDefer from '../../util/defer'\n\nimport KeyManager from '../rsa-keys-manger'\nimport { MTError, DcUrlError } from '../../error'\n\nimport { bytesFromHex, bytesToHex } from '../../bin'\n\n// import { switchErrors } from './error-cases'\nimport { delayedCall, dTime } from 'mtproto-shared'\n\nimport Request from './request'\n\nimport type { Bytes, LeftOptions, Cache, RequestOptions } from './index.h'\nimport type { PublicKey, ApiConfig, StrictConfig, ServerConfig } from '../main/index.h'\nimport type { Emit, On } from 'eventemitter2'\nimport type { AsyncStorage } from '../../plugins'\n\nimport Config from '../../config-provider'\nimport NetworkerThread from '../networker'\nimport ApiRequest from '../main/request'\nimport Property from '../../property'\n\nconst baseDcID = 2\n\nconst Ln = (length: number, obj?: *): boolean => {\n  if (obj == null) return false\n  const res = typeof obj.length === 'number' &&\n    obj.length === length\n  return res\n}\n\n\n\nexport class ApiManager {\n  invokeNetRequest: (netReq: ApiRequest) => Promise<mixed>\n  cache: Cache = {\n    uploader  : {},\n    downloader: {},\n    auth      : {},\n    servers   : {},\n    keysParsed: {}\n  }\n  uid: string\n  apiConfig: ApiConfig\n  publicKeys: PublicKey[]\n  storage: AsyncStorage\n  serverConfig: ServerConfig\n  keyManager: Args\n  networkFabric: *\n  updatesManager: any\n  auth: *\n  on: On\n  emit: Emit\n  authPromise: * = blueDefer()\n  authBegin = false\n  currentDc: number = 2\n  online: boolean = false\n  onlineProp: *\n  constructor(config: StrictConfig, uid: string) {\n    const {\n      server,\n      api,\n      app: {\n        storage,\n        publicKeys\n      }\n    } = config\n    this.uid = uid\n    this.apiConfig = api\n    this.publicKeys = publicKeys\n    this.storage = storage\n    this.serverConfig = server\n    const emitter = Config.rootEmitter(this.uid)\n    this.on = emitter.on\n    this.emit = emitter.emit\n    this.keyManager = KeyManager(uid, publicKeys, this.cache.keysParsed)\n    this.auth = Auth(uid, this.keyManager)\n\n    //$FlowIssue\n    this.mtpInvokeApi = this.mtpInvokeApi.bind(this)\n    this.invokeNetRequest = this.invokeNetRequest.bind(this)\n    //$FlowIssue\n    this.mtpGetNetworker = this.mtpGetNetworker.bind(this)\n\n    const onlineProp = Property([this.uid, 'state', 'online'].join('.'), false, emitter.root)\n    this.onlineProp = onlineProp\n    onlineProp.get.observe(debug`online prop`)\n    onlineProp.get.drain()\n    // this.updatesManager = UpdatesManager(apiManager, this.TL)\n    // apiManager.updates = this.updatesManager\n    emitter.on('error.303', (newDc: number) => {\n      this.authBegin = false\n      this.currentDc = newDc\n    })\n  }\n  networkSetter(dc: number, authKey: Bytes, serverSalt: Bytes) {\n    const networker = new NetworkerThread({\n      appConfig: this.apiConfig,\n      storage  : this.storage,\n    }, dc, authKey, serverSalt, this.uid)\n    this.cache.downloader[dc] = networker\n    return networker\n  }\n  async mtpGetNetworker(dcID: number) {\n    // const isUpload = options.fileUpload || options.fileDownload\n    // const cache = isUpload\n    //   ? this.cache.uploader\n    //   : this.cache.downloader\n\n    const cache = this.cache.downloader\n    if (!dcID) throw new Error('get Networker without dcID')\n\n    if (typeof cache[dcID] !== 'undefined') return cache[dcID]\n\n    const akk = `dc${  dcID  }_auth_key`\n    const ssk = `dc${  dcID  }_server_salt`\n\n    const dcUrl = Config.dcMap(this.uid, dcID)\n    if (typeof dcUrl !== 'string')\n      throw new DcUrlError(dcID, dcUrl)\n\n    if (cache[dcID]) return cache[dcID]\n\n    const authKeyHex: string = await this.storage.get(akk)\n    let serverSaltHex: string = await this.storage.get(ssk)\n\n    // if (!authKeyHex || !serverSaltHex)\n      // await this.doAuth()\n\n    if (Ln(512, authKeyHex)) {\n      if (!serverSaltHex || serverSaltHex.length !== 16)\n        serverSaltHex = 'AAAAAAAAAAAAAAAA'\n      const authKey = bytesFromHex(authKeyHex)\n      const serverSalt = bytesFromHex(serverSaltHex)\n\n      return this.networkSetter(dcID, authKey, serverSalt)\n    }\n\n    let auth\n    try {\n      auth = await this.auth(dcID, this.cache.auth, dcUrl)\n    } catch (error) {\n      return netError(error)\n    }\n\n    const { authKey, serverSalt } = auth\n\n    await this.storage.set(akk, bytesToHex(authKey))\n    await this.storage.set(ssk, bytesToHex(serverSalt))\n\n    this.emit('base', 'WORK')\n\n    return this.networkSetter(dcID, authKey, serverSalt)\n  }\n  async doAuth() {\n    this.authBegin = true\n    this.emit('base', 'AUTH')\n    try {\n      const storedBaseDc = await this.storage.get('dc')\n      const baseDc = storedBaseDc || baseDcID\n      const opts = {\n        dc             : baseDc,\n        createNetworker: true\n      }\n      const networker = await this.mtpGetNetworker(baseDc)\n      const nearestDc = await networker.wrapApiCall(\n        'help.getNearestDc', {}, opts)\n      const { nearest_dc, this_dc } = nearestDc\n      await this.storage.set('nearest_dc', nearest_dc)\n      if (storedBaseDc == null) {\n        await this.storage.set('dc', this_dc)\n        // if (nearest_dc !== this_dc) await this.mtpGetNetworker(nearest_dc, {\n        //   dcID           : this_dc,\n        //   createNetworker: true\n        // })\n\n      }\n      debug(`nearest Dc`, ` this dc`)(nearestDc, this_dc)\n      this.onlineProp.set(true)\n      this.authPromise.resolve()\n    } catch (err) {\n      this.authPromise.reject(err)\n    }\n  }\n  async initConnection() {\n    this.emit('base', 'REQUEST')\n    if (!isAnyNetworker(this)) {\n      if (!this.authBegin)\n        this.doAuth()\n      await this.authPromise.promise\n    }\n  }\n  mtpInvokeApi(method: string, params: Object, options: LeftOptions = {}) {\n    const netReq = new ApiRequest({ method, params }, options)\n\n    netReq.options.requestID = netReq.requestID\n    this.emit('new-request', netReq)\n\n    return netReq.defer.promise\n    // this.invokeNetRequest(netReq)\n  }\n\n  async invokeNetRequest(netReq: ApiRequest) {\n\n    const rejectPromise = (error: any) => {\n      let err\n      if (error instanceof Error)\n        err = error\n      else {\n        err = new Error()\n        //$FlowIssue\n        err.data = error\n      }\n      // if (!error)\n      //   err = { type: 'ERROR_EMPTY', input: '' }\n      // else if (!is(Object, error))\n      //   err = { message: error }\n      // else err = error\n      console.warn(`[rejectPromise] Unhandled error!`, err)\n\n      if (!netReq.options.noErrorBox) {\n        //TODO weird code. `error` changed after `.reject`?\n\n        /*err.input = method\n\n        err.stack =\n          stack ||\n          hasPath(['originalError', 'stack'], error) ||\n          error.stack ||\n          (new Error()).stack*/\n        this.emit('error.invoke', error)\n      }\n      netReq.defer.reject(err)\n    }\n    let networker\n\n    let dcID: number\n    try {\n      await this.initConnection()\n\n\n      if (netReq.options.dc) {\n        const reqDc = netReq.options.dc\n        if (typeof reqDc === 'number')\n          dcID = reqDc\n        else if (reqDc === '@@home')\n          dcID = await this.storage.get('dc')\n        else throw new Error(`invokeNetRequest wrong request id ${reqDc}`)\n      } else\n        dcID = await this.storage.get('dc')\n\n      networker = await this.mtpGetNetworker(dcID)\n    } catch (e) {\n      netReq.defer.reject(e)\n      return netReq.defer.promise\n    }\n\n    const cfg: RequestOptions = {\n      networker,\n      dc          : dcID,\n      storage     : this.storage,\n      getNetworker: this.mtpGetNetworker,\n      netOpts     : netReq.options\n    }\n    const req = new Request(cfg, netReq.data.method, netReq.data.params)\n    // const requestThunk = (waitTime: number): Promise<any> => {\n    //   debug('requestThunk', 'waitTime')(waitTime)\n    //   return delayedCall(req.performRequest, +waitTime * 1e3)\n    // }\n    // const apiRecall = (networker: NetworkerThread) => {\n    //   req.config.networker = networker\n    //   return req.performRequest()\n    // }\n    req.performRequest()\n      .then(\n        netReq.defer.resolve,\n        (error: MTError) => {\n          // const deferResolve = netReq.defer.resolve\n          // const apiSavedNet = () => networker\n\n          console.error(dTime(), 'Error', error.code, error.type, baseDcID, dcID)\n\n          const noAuth = error.code === 401\n          if (noAuth) {\n            debug('performRequest', 'no auth')(dcID)\n            this.emit('no-auth', {\n              dc    : dcID,\n              req,\n              apiReq: netReq,\n              error\n            })\n          }\n          // const waitFailRegExp = /MSG_WAIT_FAILED_(\\d+)/\n\n        //   return switchErrors(\n        //     error,\n        //     netReq.options,\n        //     dcID,\n        //     baseDcID\n        //   )(\n        //     error,\n        //     netReq.options,\n        //     dcID,\n        //     this.emit,\n        //     rejectPromise,\n        //     requestThunk,\n        //     apiSavedNet,\n        //     apiRecall,\n        //     deferResolve,\n        //     this.mtpInvokeApi,\n        //     this.storage)\n        })\n      .catch(rejectPromise)\n\n    return netReq.defer.promise\n  }\n\n  // setUserAuth = async (dcID: number, userAuth: any) => {\n  //   const fullUserAuth = { dcID, ...userAuth }\n  //   await this.storage.set('dc', dcID)\n  //   await this.storage.set('user_auth', fullUserAuth)\n  //   this.emit('auth.dc', { dc: dcID, auth: userAuth })\n  // }\n}\n\nconst isAnyNetworker = (ctx: ApiManager) => Object.keys(ctx.cache.downloader).length > 0\n\nconst netError = error => {\n  console.log('Get networker error', error, error.stack)\n  return Promise.reject(error)\n}\n"]}