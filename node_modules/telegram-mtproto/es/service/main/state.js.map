{"version":3,"sources":["../../../src/service/main/state.js"],"names":["NetworkerThread","Request","NetMessage","MapEmitter","Map","constructor","emitter","scope","Object","defineProperty","enumerable","configurable","writable","value","set","key","emit","delete","Symbol","species","prop","State","threads","requests","messages"],"mappings":"AAEA,OAAsC,eAAtC;;AAEA,OAAOA,eAAP,MAA4B,cAA5B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,UAAT,QAA2B,0BAA3B;;AAEA,MAAMC,UAAN,SAAyBC,GAAzB,CAA6B;AAG3BC,cAAYC,OAAZ,EAAuCC,KAAvC,EAAsD;AACpD;AACA,SAAKA,KAAL,GAAaA,KAAb;AACAC,WAAOC,cAAP,CAAsB,IAAtB,EAA4B,SAA5B,EAAuC;AACrCC,kBAAc,KADuB;AAErCC,oBAAc,IAFuB;AAGrCC,gBAAc,KAHuB;AAIrCC,aAAcP;AAJuB,KAAvC;AAMD;AACDQ,MAAIC,GAAJ,EAAiBF,KAAjB,EAA6B;AAC3B,SAAKP,OAAL,CAAaU,IAAb,CAAkB,KAAKT,KAAvB,EAA8B,EAAEQ,GAAF,EAAOF,KAAP,EAA9B;AACA,WAAO,MAAMC,GAAN,CAAUC,GAAV,EAAeF,KAAf,CAAP;AACD;AACDI,SAAOF,GAAP,EAAoB;AAClB,SAAKT,OAAL,CAAaU,IAAb,CAAkB,KAAKT,KAAvB,EAA8BQ,GAA9B;AACA,WAAO,MAAME,MAAN,CAAaF,GAAb,CAAP;AACD;AACD;AACA,GAACG,OAAOC,OAAR,EAAiBC,IAAjB,EAA0B;AACxB,WAAO,IAAIhB,GAAJ,CAAQgB,IAAR,CAAP;AACD;AAxB0B;;AA2B7B,MAAMC,KAAN,CAAY;AAAA;AAAA,SACVC,OADU,GAC8B,IAAIlB,GAAJ,EAD9B;AAAA,SAEVmB,QAFU,GAEuB,IAAInB,GAAJ,EAFvB;AAAA,SAGVoB,QAHU,GAG0B,IAAIpB,GAAJ,EAH1B;AAAA;;AAAA;;AAMZ,eAAeiB,KAAf","file":"state.js","sourcesContent":["//@flow\n\nimport { type EventEmitterType } from 'eventemitter2'\n\nimport NetworkerThread from '../networker'\nimport Request from './request'\nimport { NetMessage } from '../networker/net-message'\n\nclass MapEmitter extends Map {\n  emitter: EventEmitterType\n  scope: string\n  constructor(emitter: EventEmitterType, scope: string) {\n    super()\n    this.scope = scope\n    Object.defineProperty(this, 'emitter', {\n      enumerable  : false,\n      configurable: true,\n      writable    : false,\n      value       : emitter\n    })\n  }\n  set(key: string, value: any) {\n    this.emitter.emit(this.scope, { key, value })\n    return super.set(key, value)\n  }\n  delete(key: string) {\n    this.emitter.emit(this.scope, key)\n    return super.delete(key)\n  }\n  //$FlowIssue\n  [Symbol.species](prop: *) {\n    return new Map(prop)\n  }\n}\n\nclass State {\n  threads: Map<string, NetworkerThread> = new Map\n  requests: Map<string, Request> = new Map\n  messages: Map<string, NetMessage> = new Map\n}\n\nexport default State\n"]}