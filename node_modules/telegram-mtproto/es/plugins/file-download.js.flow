//@flow

const CHUNK_SIZE = 10240

type MTDocument = {
  _: 'document',
  id: number,
  access_hash: string,
  mime_type: 'video/mp4',
  size: number,
  dc_id: number,
}

const downloadFilePart = (
  location,
  chunkNum: number = 0,
  telegram
) => {
  const args = {
    location,
    offset: CHUNK_SIZE * chunkNum,
    limit : CHUNK_SIZE,
  }
  return telegram('upload.getFile', args)
}

const getLocation = (doc: MTDocument) => ({
  _          : 'inputVideoFileLocation',
  id         : doc.id,
  access_hash: doc.access_hash
})

const downloadDocument = async (doc: MTDocument, telegram) => {
  const location = getLocation(doc)
  const parts = Math.ceil(doc.size / CHUNK_SIZE)
  const results: Array<number[]> = Array(parts)
  for (let i = 0; i < parts; i++) {
    const response = await downloadFilePart(location, i, telegram)
    results[i] = response.bytes
  }
  return new Uint8Array([...results])
}

export default downloadDocument
