{"version":3,"sources":["../src/property.js"],"names":["hold","fromEvent","EventEmitter","Property","name","value","emitter","plainStream","property","get","set","emit"],"mappings":"AAEA,SAASA,IAAT,QAAqB,YAArB;AACA,SAASC,SAAT,QAA0B,MAA1B;;AAEA,OAAOC,YAAP,MAAyB,eAAzB;;AAEA,IAAMC,WAAW,CAAKC,IAAL,EAAmBC,KAAnB,EAA6BC,OAA7B,KAAuD;AACtE,MAAMC,cAAyBN,UAAUG,IAAV,EAAgBE,OAAhB,CAA/B;AACA,MAAME,WAAWR,KAAKO,WAAL,CAAjB;AACA,SAAO;AACLE,SAAKD,QADA;AAELE,QAAIL,KAAJ,EAAc;AACZC,cAAQK,IAAR,CAAaP,IAAb,EAAmBC,KAAnB;AACD;AAJI,GAAP;AAMD,CATD;;AAWA,eAAeF,QAAf","file":"property.js","sourcesContent":["//@flow\n\nimport { hold } from '@most/hold'\nimport { fromEvent } from 'most'\nimport type { Stream } from 'most'\nimport EventEmitter from 'eventemitter2'\n\nconst Property = <+T>(name: string, value: T, emitter: EventEmitter) => {\n  const plainStream: Stream<T> = fromEvent(name, emitter)\n  const property = hold(plainStream)\n  return {\n    get: property,\n    set(value: T) {\n      emitter.emit(name, value)\n    }\n  }\n}\n\nexport default Property\n"]}