{"version":3,"sources":["../../src/util/floodgate.js"],"names":["bufferOptions","flushOnEnd","floodgate","flood","gate","gateMap","state","map","toProperty","combinator","f","s","stream","gateState","bufferCondition","streamSelector","output","bufferWhile","flatten","skipDuplicates"],"mappings":";;;;;;AAEA;;AAGA,IAAMA,gBAAgB,EAAEC,YAAY,KAAd,EAAtB;;AAYgB;AAAA,SAAM,KAAN;AAAA;;AARhB,IAAMC,YAAY,CAChBC,KADgB,EAEhBC,IAFgB,EAGhBC,OAHgB,KAIQ;;AAExB,MAAMC,QAAQF,KACXG,GADW,CACPF,OADO,EAEXG,UAFW,MAAd;;AAMA,MAAMC,aAAa,CAACC,CAAD,EAAOC,CAAP,MAAmC;AACpDC,YAAWF,CADyC;AAEpDG,eAAWF;AAFyC,GAAnC,CAAnB;;AAKA,MAAMG,kBAAkB,CAAC,EAAED,SAAF,EAAD,KAA+B,CAACA,SAAxD;;AAEA,MAAME,iBAAiB,CAAC,EAAEH,MAAF,EAAD,KAA+BA,MAAtD;;AAEA,MAAMI,SAAS,oBAAQ,CAACb,KAAD,EAAQG,KAAR,CAAR,EAAwBG,UAAxB,EACZQ,WADY,CACAH,eADA,EACiBd,aADjB,EAEZkB,OAFY,GAGZX,GAHY,CAGRQ,cAHQ,EAIZI,cAJY,EAAf;AAKA,SAAOH,MAAP;AACD,CA3BD;;kBA6Bed,S","file":"floodgate.js","sourcesContent":["//@flow\n\nimport { combine } from 'kefir'\nimport type { Observable } from 'kefir'\n\nconst bufferOptions = { flushOnEnd: false }\n\n\n\nconst floodgate = <+F, +G>(\n  flood: Observable<F, void>,\n  gate: Observable<G, void>,\n  gateMap: (val: G) => boolean\n): Observable<F, void> => {\n\n  const state = gate\n    .map(gateMap)\n    .toProperty(() => false)\n\n  type StreamPair = { stream: F, gateState: boolean }\n\n  const combinator = (f: F, s: boolean): StreamPair => ({\n    stream   : f,\n    gateState: s,\n  })\n\n  const bufferCondition = ({ gateState }: StreamPair) => !gateState\n\n  const streamSelector = ({ stream }: StreamPair): F => stream\n\n  const output = combine([flood, state], combinator)\n    .bufferWhile(bufferCondition, bufferOptions)\n    .flatten()\n    .map(streamSelector)\n    .skipDuplicates()\n  return output\n}\n\nexport default floodgate\n"]}